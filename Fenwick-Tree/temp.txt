class Fenwick{\n    private:\n    long long int* a;\n    int size;\n    public:\n    Fenwick(int n){\n        a = new long long int[n + 1]();\n        size = n;\n    }\n    Fenwick(int n, int* arr){\n        a = new long long int[n + 1]();\n        size = n;\n        for(int i = 1;i < n + 1; ++i){\n            int ssb = 0;\n            while(!(i & (1<<ssb))) ssb++;\n            int k = (1 << ssb);\n            while(k){\n                a[i] += arr[i - k];\n                k--;\n            }\n        }\n    }\n    void increase(int pos, int val){\n        pos++;\n        if(pos > size) return;\n        while(pos <= size){\n            a[pos] += val;\n            pos += pos - (pos & (pos - 1));\n        }\n    }\n    long long int sum(int i){\n        long long int ans = 0;\n        int x = i;\n        while(x != 0){\n            ans += a[x];\n            x &= (x - 1);\n        }\n        return ans;\n    }\n    long long int rsq(int i, int j){\n        i++;\n        j++;\n        if(i > j) return -1;\n        return sum(j) - sum(i - 1);\n    } \n    \n};\n