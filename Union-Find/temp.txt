class UF{\n    int* id;\n    int* sz;\n    public:\n    UF(int n){\n        id = new int[n];\n        sz = new int[n];\n        for(int i = 0;i < n; ++i){\n            id[i] = i;\n            sz[i] = 1;\n        }\n    }\n    int root(int p){\n        int r = p;\n        while(r != id[r]) r = id[r];\n        while(p != id[p]){\n            int temp = id[p];\n            id[p] = r;\n            p = temp;\n        }\n        return r;\n    }\n    bool connected(int p, int q){\n        return root(p) == root(q);\n    }\n    void Union(int p, int q){\n        if(!connected(p, q)){\n            int proot = root(p);\n            int qroot = root(q);\n            if(sz[proot] > sz[qroot]) {\n                id[qroot] = proot;\n                sz[proot] += sz[qroot];\n            }else{\n                id[proot] = qroot;\n                sz[qroot] += sz[proot];\n            }\n        }\n    }\n};