class SegTree{\n    private:\n    int size;\n    int* arr;\n    public:\n    SegTree(int n, int* a){\n        size = n;\n        arr = new int[4 * n];\n        build(a, 0, 0, n - 1);\n    }\n    int left(int i){ return (i << 1) + 1;}\n    int right(int i){ return (i << 1) + 2;}\n    void build(int * a, int root, int l, int r){\n        if(l > r) return;\n        if(l == r){\n            arr[root] = l;\n        }else{\n            build(a, left(root), l, (l + r)/ 2);\n            build(a, right(root), (l + r)/2 + 1, r);\n            if(a[arr[left(root)]] < a[arr[right(root)]]) arr[root] = arr[left(root)];\n            else arr[root] = arr[right(root)]; \n        }\n    }\n    int query(int* a, int root, int l, int r, int i, int j){\n        if(i > r || j < l){\n            return -1;\n        }\n        if(i >= l && j <= r){\n            return arr[root];\n        }\n        int p1 = query(a, root * 2 + 1, l, (l + r) / 2, i, j);\n        int p2 = query(a, root * 2 + 2, (l + r) / 2 + 1, r, i, j);\n        if(p1 == -1) return p2;\n        if(p2 == -1) return p1;\n        if(a[p1] <= a[p2]) return p1;\n        return p2;\n    }\n};